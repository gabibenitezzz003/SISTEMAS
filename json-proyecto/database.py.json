{
    "archivo": "database.py",
    "ruta_completa": "C:\\Users\\gabib\\Desktop\\gestor_horarios_GSS-WEB\\database.py",
    "docstring_modulo": null,
    "contenido_completo": "from flask_sqlalchemy import SQLAlchemy\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker, scoped_session\nfrom sqlalchemy.ext.declarative import declarative_base\nimport os\nfrom dotenv import load_dotenv\n\n# Cargar variables de entorno\nload_dotenv()\n\n# Crear la instancia de SQLAlchemy\ndb = SQLAlchemy()\n\n# Crear el engine de la base de datos\nDATABASE_URL = os.getenv('DATABASE_URL', 'sqlite:///gtr.db')\nengine = create_engine(DATABASE_URL)\n\n# Crear la sesión\ndb_session = scoped_session(sessionmaker(bind=engine))\n\n# Base declarativa para los modelos\nBase = declarative_base()\nBase.query = db_session.query_property()\n\ndef init_db():\n    \"\"\"Inicializar la base de datos\"\"\"\n    try:\n        # Importar modelos aquí para asegurar que están registrados\n        import models\n        Base.metadata.create_all(bind=engine)\n        print(\"Base de datos inicializada correctamente\")\n    except Exception as e:\n        print(f\"Error al inicializar la base de datos: {e}\")\n\n# Exportar db para que esté disponible en otros módulos\n__all__ = ['db', 'db_session', 'Base', 'init_db'] ",
    "imports": [
        {
            "type": "from",
            "module": "flask_sqlalchemy",
            "level": 0,
            "names": [
                {
                    "name": "SQLAlchemy",
                    "asname": null
                }
            ],
            "lineno": 1
        },
        {
            "type": "from",
            "module": "sqlalchemy",
            "level": 0,
            "names": [
                {
                    "name": "create_engine",
                    "asname": null
                }
            ],
            "lineno": 2
        },
        {
            "type": "from",
            "module": "sqlalchemy.orm",
            "level": 0,
            "names": [
                {
                    "name": "sessionmaker",
                    "asname": null
                },
                {
                    "name": "scoped_session",
                    "asname": null
                }
            ],
            "lineno": 3
        },
        {
            "type": "from",
            "module": "sqlalchemy.ext.declarative",
            "level": 0,
            "names": [
                {
                    "name": "declarative_base",
                    "asname": null
                }
            ],
            "lineno": 4
        },
        {
            "type": "import",
            "modules": [
                {
                    "module": "os",
                    "asname": null
                }
            ],
            "lineno": 5
        },
        {
            "type": "from",
            "module": "dotenv",
            "level": 0,
            "names": [
                {
                    "name": "load_dotenv",
                    "asname": null
                }
            ],
            "lineno": 6
        },
        {
            "type": "import",
            "modules": [
                {
                    "module": "models",
                    "asname": null
                }
            ],
            "lineno": 29
        }
    ],
    "clases": [],
    "funciones": [
        {
            "nombre": "init_db",
            "lineno": 25,
            "docstring": "Inicializar la base de datos",
            "decoradores": [],
            "argumentos": []
        }
    ],
    "asignaciones": [
        {
            "lineno": 12,
            "targets": [
                "db"
            ],
            "value": "SQLAlchemy()"
        },
        {
            "lineno": 15,
            "targets": [
                "DATABASE_URL"
            ],
            "value": "os.getenv('DATABASE_URL', 'sqlite:///gtr.db')"
        },
        {
            "lineno": 16,
            "targets": [
                "engine"
            ],
            "value": "create_engine(DATABASE_URL)"
        },
        {
            "lineno": 19,
            "targets": [
                "db_session"
            ],
            "value": "scoped_session(sessionmaker(bind=engine))"
        },
        {
            "lineno": 22,
            "targets": [
                "Base"
            ],
            "value": "declarative_base()"
        },
        {
            "lineno": 23,
            "targets": [
                "Base.query"
            ],
            "value": "db_session.query_property()"
        },
        {
            "lineno": 36,
            "targets": [
                "__all__"
            ],
            "value": "['db', 'db_session', 'Base', 'init_db']"
        }
    ]
}